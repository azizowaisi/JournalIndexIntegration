# Staging Profile Configuration
# Journal Index Integration - Staging Environment

# =============================================================================
# ENVIRONMENT IDENTIFICATION
# =============================================================================
spring.profiles.active=staging
environment.name=staging

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# JPA Configuration (Staging)
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.use_sql_comments=false
spring.jpa.properties.hibernate.jdbc.batch_size=15
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

# Data Source Configuration (Staging)
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=${DB_URL:jdbc:mysql://journal-index-staging.cluster-xyz.us-east-1.rds.amazonaws.com:3306/journal_index_staging?useSSL=true&serverTimezone=UTC&requireSSL=true}
spring.datasource.username=${DB_USERNAME:staging_user}
spring.datasource.password=${DB_PASSWORD:CHANGE_ME}

# Connection Pool (Medium for staging)
spring.datasource.hikari.maximum-pool-size=15
spring.datasource.hikari.minimum-idle=3
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.max-lifetime=900000

# =============================================================================
# AWS CONFIGURATION
# =============================================================================
aws.region=${AWS_REGION:us-east-1}
aws.sqs.queue.url=${SQS_QUEUE_URL:https://sqs.us-east-1.amazonaws.com/123456789012/journal-index-queue-staging}

# =============================================================================
# OAI CONFIGURATION
# =============================================================================
oai.default.metadata.prefix=oai_dc
oai.batch.size=${OAI_BATCH_SIZE:75}
oai.timeout=${OAI_TIMEOUT:25000}

# =============================================================================
# LOGGING CONFIGURATION (BALANCED FOR STAGING)
# =============================================================================
logging.level.com.teckiz.journalindex=INFO
logging.level.org.apache.camel=INFO
logging.level.org.apache.camel.component.sql=WARN
logging.level.org.springframework.web=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN

# Log file configuration
logging.file.name=logs/journal-index-staging.log
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# =============================================================================
# ERROR HANDLING (BALANCED FOR STAGING)
# =============================================================================
error.max.retries=${MAX_RETRIES:3}
error.retry.delay=${RETRY_DELAY:2000}

# =============================================================================
# STAGING FEATURES
# =============================================================================

# Enable limited management endpoints
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized
management.info.env.enabled=true

# Spring Boot Actuator
management.server.port=8081
management.endpoints.web.base-path=/actuator

# =============================================================================
# CACHING (BASIC FOR STAGING)
# =============================================================================
spring.cache.type=simple
spring.cache.cache-names=oai-responses,api-cache
spring.cache.caffeine.spec=maximumSize=100,expireAfterWrite=30m

# =============================================================================
# SECURITY (BASIC FOR STAGING)
# =============================================================================
# Basic security configuration
spring.security.user.name=staging-admin
spring.security.user.password=${STAGING_ADMIN_PASSWORD:CHANGE_ME}

# =============================================================================
# MONITORING (ENHANCED FOR STAGING)
# =============================================================================
# Micrometer configuration
management.metrics.export.cloudwatch.enabled=true
management.metrics.export.prometheus.enabled=true
management.metrics.export.cloudwatch.namespace=JournalIndex/Staging

# =============================================================================
# FEATURE FLAGS (STAGING)
# =============================================================================
feature.enable.oai.ojs=${ENABLE_OJS_OAI:true}
feature.enable.oai.doj=${ENABLE_DOAJ:true}
feature.enable.teckiz=${ENABLE_TECKIZ:true}
feature.enable.cron.import=${ENABLE_CRON_IMPORT:true}
feature.enable.batch.processing=${ENABLE_BATCH_PROCESSING:true}
feature.enable.parallel.processing=${ENABLE_PARALLEL_PROCESSING:false}
feature.enable.caching=${ENABLE_CACHING:false}

# =============================================================================
# PERFORMANCE TUNING (STAGING)
# =============================================================================
# Connection pool optimization
spring.datasource.hikari.leak-detection-threshold=60000
spring.datasource.hikari.validation-timeout=3000

# JPA optimization
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.connection.provider_disables_autocommit=true

# =============================================================================
# EXTERNAL SERVICES (STAGING)
# =============================================================================
# External API configuration
external.api.timeout=${EXTERNAL_API_TIMEOUT:20}
external.api.retries=${EXTERNAL_API_RETRIES:3}
external.api.rate.limit=${RATE_LIMIT_REQUESTS_PER_MINUTE:300}

# =============================================================================
# TESTING CONFIGURATION (STAGING)
# =============================================================================
# Test database configuration for staging tests
spring.datasource.test.url=${TEST_DB_URL:jdbc:mysql://journal-index-staging.cluster-xyz.us-east-1.rds.amazonaws.com:3306/journal_index_staging_test?useSSL=true&serverTimezone=UTC}
spring.datasource.test.username=${TEST_DB_USERNAME:staging_test_user}
spring.datasource.test.password=${TEST_DB_PASSWORD:CHANGE_ME}

# Integration test configuration
spring.test.database.replace=none
