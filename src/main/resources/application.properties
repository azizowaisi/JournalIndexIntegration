# Production Configuration
# Journal Index Integration - Production Environment

# =============================================================================
# ENVIRONMENT IDENTIFICATION
# =============================================================================
spring.profiles.active=prod
environment.name=production

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# JPA Configuration (Production)
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.use_sql_comments=false
spring.jpa.properties.hibernate.jdbc.batch_size=25
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

# Prevent Hibernate from trying to validate/update schema
spring.jpa.properties.hibernate.hbm2ddl.auto=none
spring.jpa.properties.hibernate.hbm2ddl.validate=false
spring.jpa.properties.hibernate.hbm2ddl.create=false
spring.jpa.properties.hibernate.hbm2ddl.update=false
spring.jpa.properties.hibernate.hbm2ddl.create-drop=false

# Disable schema validation on startup
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
spring.jpa.properties.hibernate.connection.provider_disables_autocommit=true

# Production Data Source Configuration
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}

# Connection Pool (Optimized for VPC environment)
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.connection-timeout=60000
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.leak-detection-threshold=60000
spring.datasource.hikari.validation-timeout=3000

# Additional connection settings for VPC environment
spring.datasource.hikari.connection-test-query=SELECT 1
spring.datasource.hikari.initialization-fail-timeout=60000
spring.datasource.hikari.keep-alive-time=30000

# MySQL connection parameters for VPC connectivity
spring.datasource.url=${DB_URL}?useSSL=true&serverTimezone=UTC&allowPublicKeyRetrieval=true&connectTimeout=60000&socketTimeout=60000&autoReconnect=true&failOverReadOnly=false&maxReconnects=3

# =============================================================================
# AWS CONFIGURATION
# =============================================================================
aws.region=${AWS_REGION}
aws.sqs.queue.url=${SQS_QUEUE_URL}

# S3 Configuration
aws.s3.bucket.name=${S3_BUCKET_NAME}
aws.s3.region=${AWS_REGION}

# =============================================================================
# OAI CONFIGURATION
# =============================================================================
oai.default.metadata.prefix=oai_dc
oai.batch.size=${OAI_BATCH_SIZE:100}
oai.timeout=${OAI_TIMEOUT:30000}

# =============================================================================
# LOGGING CONFIGURATION (MINIMAL FOR PRODUCTION)
# =============================================================================
logging.level.com.teckiz.journalindex=WARN
logging.level.org.apache.camel=WARN
logging.level.org.apache.camel.component.sql=ERROR
logging.level.org.springframework.web=ERROR
logging.level.org.hibernate.SQL=ERROR
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=ERROR
logging.level.org.springframework.boot.autoconfigure=ERROR

# Enable database connection logging for debugging
logging.level.org.springframework.jdbc=DEBUG
logging.level.com.zaxxer.hikari=DEBUG
logging.level.org.hibernate.engine.jdbc=DEBUG

# Log file configuration
logging.file.name=logs/journal-index-prod.log
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Log rotation
logging.logback.rollingpolicy.max-file-size=100MB
logging.logback.rollingpolicy.max-history=30
logging.logback.rollingpolicy.total-size-cap=1GB

# =============================================================================
# ERROR HANDLING (PRODUCTION OPTIMIZED)
# =============================================================================
error.max.retries=${MAX_RETRIES:3}
error.retry.delay=${RETRY_DELAY:3000}

# =============================================================================
# PRODUCTION FEATURES
# =============================================================================

# Minimal management endpoints for production
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=never
management.info.env.enabled=false

# Spring Boot Actuator (Secure)
management.server.port=8081
management.endpoints.web.base-path=/actuator
management.security.enabled=true

# =============================================================================
# CACHING (OPTIMIZED FOR PRODUCTION)
# =============================================================================
spring.cache.type=caffeine
spring.cache.cache-names=oai-responses,api-cache,journal-metadata
spring.cache.caffeine.spec=maximumSize=1000,expireAfterWrite=60m,expireAfterAccess=30m

# =============================================================================
# SECURITY (STRICT FOR PRODUCTION)
# =============================================================================
# Production security configuration
spring.security.user.name=prod-admin
spring.security.user.password=${PROD_ADMIN_PASSWORD:CHANGE_ME}

# HTTPS enforcement
server.ssl.enabled=false
server.port=8080

# =============================================================================
# MONITORING (COMPREHENSIVE FOR PRODUCTION)
# =============================================================================
# Micrometer configuration
management.metrics.export.cloudwatch.enabled=true
management.metrics.export.prometheus.enabled=true
management.metrics.export.cloudwatch.namespace=JournalIndex/Production
management.metrics.export.cloudwatch.batch-size=20

# Custom metrics
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.distribution.percentiles.http.server.requests=0.5,0.9,0.95,0.99

# =============================================================================
# FEATURE FLAGS (PRODUCTION)
# =============================================================================
feature.enable.oai.ojs=${ENABLE_OJS_OAI:true}
feature.enable.oai.doj=${ENABLE_DOAJ:true}
feature.enable.teckiz=${ENABLE_TECKIZ:true}
feature.enable.cron.import=${ENABLE_CRON_IMPORT:true}
feature.enable.batch.processing=${ENABLE_BATCH_PROCESSING:true}
feature.enable.parallel.processing=${ENABLE_PARALLEL_PROCESSING:true}
feature.enable.caching=${ENABLE_CACHING:true}

# =============================================================================
# PERFORMANCE TUNING (PRODUCTION)
# =============================================================================
# JVM optimization hints
server.tomcat.max-threads=200
server.tomcat.min-spare-threads=10
server.tomcat.connection-timeout=20000
server.tomcat.max-connections=8192

# JPA optimization
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.connection.provider_disables_autocommit=true
spring.jpa.properties.hibernate.connection.autocommit=false

# =============================================================================
# EXTERNAL SERVICES (PRODUCTION)
# =============================================================================
# External API configuration
external.api.timeout=${EXTERNAL_API_TIMEOUT:30}
external.api.retries=${EXTERNAL_API_RETRIES:3}
external.api.rate.limit=${RATE_LIMIT_REQUESTS_PER_MINUTE:60}

# Circuit breaker configuration
resilience4j.circuitbreaker.instances.oai.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.oai.wait-duration-in-open-state=30s
resilience4j.circuitbreaker.instances.oai.sliding-window-size=10

# =============================================================================
# BACKUP AND DISASTER RECOVERY
# =============================================================================
# Backup configuration
backup.enabled=${ENABLE_AUTOMATED_BACKUPS:true}
backup.retention.days=${BACKUP_RETENTION_DAYS:30}
backup.schedule=${BACKUP_SCHEDULE:0 2 * * ?}

# =============================================================================
# COMPLIANCE AND AUDITING
# =============================================================================
# Audit logging
audit.logging.enabled=${ENABLE_AUDIT_LOGGING:true}
audit.log.retention.days=${AUDIT_LOG_RETENTION_DAYS:90}

# Data encryption
data.encryption.enabled=${ENABLE_DATA_ENCRYPTION:true}
access.logging.enabled=${ENABLE_ACCESS_LOGGING:true}

# =============================================================================
# HEALTH CHECKS (PRODUCTION)
# =============================================================================
# Health check configuration
management.health.db.enabled=true
management.health.disk-space.enabled=true
management.health.disk-space.threshold=100MB

# Custom health indicators
management.health.oai.enabled=true
management.health.sqs.enabled=true
management.health.cache.enabled=true
management.health.s3.enabled=true